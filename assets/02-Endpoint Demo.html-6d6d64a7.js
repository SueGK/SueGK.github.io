import{_ as t,Y as o,Z as i,$ as a,a0 as n,a1 as p,a2 as s,F as c}from"./framework-cd097da3.js";const r={},l=s('<hr><h2 id="title-02-endpoint-demoarticle-false" tabindex="-1"><a class="header-anchor" href="#title-02-endpoint-demoarticle-false" aria-hidden="true">#</a> title: 02-Endpoint Demo article: false</h2><p>In this demo, we demonstrate how to create an endpoint in the following two ways:</p><ul><li><strong>AWS Console</strong></li><li><strong>SDK</strong></li></ul><p>Then, we will also talk about how to make predictions using an endpoint.</p><h3 id="aws-console" tabindex="-1"><a class="header-anchor" href="#aws-console" aria-hidden="true">#</a> AWS Console</h3><p>To create the endpoint using the console, we first create an <strong>endpoint configuration.</strong> Then, we’re already basically done. We can then use this endpoint configuration via <strong>create endpoint</strong>. We can confirm the health of our endpoint in the SageMaker Console under &#39;Endpoints&#39;, which is under &#39;Inference.&#39;</p><p>Quick heads-up: if you’re doing this through a personal account, there’s a limit of 2 instances across your endpoints. Contact AWS support if you want to increase this number.</p><h3 id="sdk" tabindex="-1"><a class="header-anchor" href="#sdk" aria-hidden="true">#</a> SDK</h3>',9),d={href:"https://github.com/udacity/udacity-nd009t-C2-Developing-ML-Workflow/tree/master",target:"_blank",rel:"noopener noreferrer"},u=a("code",null,"Lesson 2, Lecture 2 Demo - Endpoint.ipynb",-1),m=s(`<p>Through the SDK, we will first initiate a <strong>boto3 client</strong>. Then, we obtain the <strong>model image uri</strong>, the <strong>model artifact</strong>, and an <strong>execution role</strong>. This is used to initiate a <code>Model</code> object. Then, we call the <code>deploy</code> method, specifying what kind of instance we want and how many.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>role <span class="token operator">=</span> get_execution_role<span class="token punctuation">(</span><span class="token punctuation">)</span>
image_uri <span class="token operator">=</span> image_uris<span class="token punctuation">.</span>retrieve<span class="token punctuation">(</span>framework<span class="token operator">=</span><span class="token string">&#39;xgboost&#39;</span><span class="token punctuation">,</span>region<span class="token operator">=</span><span class="token string">&#39;us-west-2&#39;</span><span class="token punctuation">,</span> version<span class="token operator">=</span><span class="token string">&#39;latest&#39;</span><span class="token punctuation">)</span>
model_data <span class="token operator">=</span> <span class="token string">&quot;s3://sagemaker-us-west-2-565094796913/boston-xgboost-HL/output/xgboost-2021-08-31-23-02-30-970/output/model.tar.gz&quot;</span>

model <span class="token operator">=</span> Model<span class="token punctuation">(</span>image_uri<span class="token operator">=</span>image_uri<span class="token punctuation">,</span> model_data<span class="token operator">=</span>model_data<span class="token punctuation">,</span> role<span class="token operator">=</span>role<span class="token punctuation">)</span>

predictor <span class="token operator">=</span> model<span class="token punctuation">.</span>deploy<span class="token punctuation">(</span>initial_instance_count<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> instance_type<span class="token operator">=</span><span class="token string">&quot;ml.m5.large&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="using-endpoint-through-sdk" tabindex="-1"><a class="header-anchor" href="#using-endpoint-through-sdk" aria-hidden="true">#</a> Using endpoint through SDK</h3><p>To utilize this endpoint, you can do it programmatically through the SDK&#39;s <code>Predictor</code> interface. You pass in the <strong>endpoint name</strong> and your <strong>Boto3 session</strong>. Depending on the type of data, you may need to <strong>serialize</strong> the data. <strong>Serializing</strong> the data breaks the data down in such a way that it can be recreated later. An example of a predictor object and serialization is shown below.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#deploy the model</span>
deployment <span class="token operator">=</span> model<span class="token punctuation">.</span>deploy<span class="token punctuation">(</span>
    initial_instance_count<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>
    instance_type<span class="token operator">=</span><span class="token string">&#39;ml.m5.xlarge&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
<span class="token comment">#get the endpoint name</span>
endpoint <span class="token operator">=</span> deployment<span class="token punctuation">.</span>endpoint_name

<span class="token comment">#instantiate a Predictor</span>
predictor <span class="token operator">=</span> sagemaker<span class="token punctuation">.</span>predictor<span class="token punctuation">.</span>Predictor<span class="token punctuation">(</span>
    endpoint<span class="token punctuation">,</span>
    sagemaker_session<span class="token operator">=</span>sagemaker<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>

<span class="token comment">#prepare one image for prediction</span>
predictor<span class="token punctuation">.</span>serializer <span class="token operator">=</span> IdentitySerializer<span class="token punctuation">(</span><span class="token string">&quot;image/png&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;test_image.png&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rb&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    payload <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">#use the predictor to make a prediction</span>
inference <span class="token operator">=</span> predictor<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="make-sure-you-delete-the-endpoint-and-other-instances-once-you-complete-the-demo-to-avoid-cost" tabindex="-1"><a class="header-anchor" href="#make-sure-you-delete-the-endpoint-and-other-instances-once-you-complete-the-demo-to-avoid-cost" aria-hidden="true">#</a> Make sure you delete the endpoint and other instances once you complete the demo to avoid cost!</h3>`,6);function h(k,g){const e=c("ExternalLinkIcon");return o(),i("div",null,[l,a("p",null,[n("Reminder: all the code demonstrated here can be found in the course "),a("a",d,[n("Github repo"),p(e)]),n(" in "),u,n(".")]),m])}const b=t(r,[["render",h],["__file","02-Endpoint Demo.html.vue"]]);export{b as default};
