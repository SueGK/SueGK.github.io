import{_ as t,Y as e,Z as o,a2 as i}from"./framework-ba388aaf.js";const a={},s=i('<p><strong>For Blogs that need a lot of time to read and learn对于需要大量时间阅读和学习的博客 (such as code projects etc)（如代码项目等）</strong></p><p>▶ Using Blog Reference like <strong>((Blog))</strong> to gather all blog/articles so I could easily check in the “Reading&amp;Watching List” Page▶ 使用像 （（Blog）） 这样的博客参考来收集所有博客/文章，这样我就可以轻松查看“阅读&amp;观看列表”页面</p><figure><img src="https://miro.medium.com/v2/resize:fit:1400/0*7NRdxjiFjzSzeAom" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://miro.medium.com/v2/resize:fit:1400/0*H1HNTw7kJAXXSNke" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>For smaller todo list 对于较小的待办事项列表</strong></p><p>I just use roam default /todo(in any pages) and use roam/js smartblocks TODO commands to fetch a list of block references of TODOs for Today/Overdue/Future TODOS我只使用 roam default /todo（在任何页面中）并使用 roam/js smartblocks TODO 命令来获取今天/逾期/未来 TODOS 的 TODO 的块引用列表</p><p>My Usage Scenarios: <strong>Morning Journal</strong>我的使用场景：晨报</p><p>When I start to write Morning Journal, I’ll use #42SmartBlock to automatically create the journal with <strong>Get Thing Done</strong> section where it shows all the TODOs for Today/Overdue/Future TODOS. Therefore I could easily check up the random TODOs to find somethings you’d like to do today and add them to <strong>Make time for today’s Highlight</strong> section. I also have projects pages where contains all todo for the specific project but sometimes it’s convenient and mindless to just fetch some random todo blocks.当我开始编写晨间日记时，我将使用 #42SmartBlock 自动创建带有 Get Thing Done 部分的日记，其中显示今天/逾期/未来 TODO 的所有 TODO。因此，我可以轻松地检查随机的 TODO，找到您今天想做的事情，并将它们添加到 Make time for today&#39;s Highlight 部分。我也有项目页面，其中包含特定项目的所有待办事项，但有时只是获取一些随机的待办事项块既方便又无意识。</p><figure><img src="https://miro.medium.com/v2/resize:fit:1064/1*xkkFs4Y29utCd7jBnYS0Cg.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://miro.medium.com/v2/resize:fit:1136/1*9NOdgK41HM8KK2hbvZtECg.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',10),r=[s];function n(c,l){return e(),o("div",null,r)}const d=t(a,[["render",n],["__file","2022-07-08.html.vue"]]);export{d as default};
